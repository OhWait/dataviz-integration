services:
  airflow-init:
    image: apache/airflow:2.5.0
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow db upgrade && airflow users create --username admin --firstname admin --lastname admin --role Admin --email admin@example.com --password admin"
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    env_file:
      - .env
    networks:
      - database

  airflow-webserver:
    image: apache/airflow:2.5.0
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    env_file:
      - .env
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - database

  airflow-scheduler:
    image: apache/airflow:2.5.0
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
    env_file:
      - .env
    command: scheduler
    networks:
      - database

networks:
  database:
    external: ${EXTERNAL_NETWORK:-true}
    name: dataviz_network